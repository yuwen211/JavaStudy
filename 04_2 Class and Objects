1.类(Class)和对象(Object)是面向对象的核心概念。
     (1)类是对一类事物的描述，是抽象的、概念上的定义
     (2)对象是实际存在的该类事物的每个个体，因而也称为实例(instance)。
     (3)可以理解为：类 = 抽象概念的人；对象 = 实实在在的某个人
     (4)面向对象程序设计的重点是类的设计
     (5)类的设计，其实就是类的成员的设计

2.常见的类的成员有：
     (1)属 性：对应类中的成员变量
     (2)方 法：对应类中的成员方法
  属性 = 成员变量 = field = 域、字段
  方法 = 成员方法 = 函数 = method

3.类的语法格式：
    修饰符 class 类名{
        属性声明；
        方法声明；
     }


4.创建Java自定义类步骤：
     (1)定义类（考虑修饰符、类名）
     (2)编写类的属性（考虑修饰符、属性类型、属性名、初始化值）
     (3)编写类的方法（考虑修饰符、返回值类型、方法名、形参等）


5.类和对象的使用（面向对象思想落地的实现）：
     (1)创建类，设计类的成员
     (2)创建类的对象
     (3)通过“对象.属性”或“对象.方法”调用对象的结构


6.如果创建了一个类的多个对象，则每个对象都独立的拥有一套类的属性。（非static的）
  意味着：如果我们修改一个对象的属性a，则不影响另外一个对象属性a的值。

public class PersonTest {
	public static void main(String[] args) {
		//2. 创建Person类的对象
		Person p1 = new Person();
		//Scanner scanner = new Scanner(System.in);
		
		//调用对象的结构：属性、方法
		//调用属性：“对象.属性”
		p1.name = "Tom";
		p1.isMale = true;
		System.out.println(p1.name);
		
		//调用方法：“对象.方法”
		p1.eat();
		p1.sleep();
		p1.talk("Chinese");
		
		//*******************************
		Person p2 = new Person();
		System.out.println(p2.name);//null
		System.out.println(p2.isMale);
		//*******************************
		//将p1变量保存的对象地址值赋给p3,导致p1和p3指向了堆空间中的同一个对象实体。
		Person p3 = p1;
		System.out.println(p3.name);//Tom
		
		p3.age = 10;
		System.out.println(p1.age);//10
		
	}
}

//1.创建类，设计类的成员
class Person{
	
	//属性
	String name;
	int age = 1;
	boolean isMale;
	
	//方法
	public void eat(){
		System.out.println("人可以吃饭");
	}
	
	public void sleep(){
		System.out.println("人可以睡觉");
	}
	
	public void talk(String language){
		System.out.println("人可以说话,使用的是：" + language);
	}
	
}
