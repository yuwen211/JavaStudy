1.Java简史
  >1991年 Green项目，开发语言最初命名为Oak (橡树)
  >1994年，开发组意识到Oak 非常适合于互联网
  >1996年，发布JDK 1.0，约8.3万个网页应用Java技术来制作
  >1997年，发布JDK 1.1，JavaOne会议召开，创当时全球同类会议规模之最
  >1998年，发布JDK 1.2，同年发布企业平台J2EE
  >1999年，Java分成J2SE、J2EE和J2ME，JSP/Servlet技术诞生
  >2004年，发布里程碑式版本：JDK 1.5，为突出此版本的重要性，更名为JDK 5.0
  >2005年，J2SE -> JavaSE，J2EE -> JavaEE，J2ME -> JavaME
  >2009年，Oracle公司收购SUN，交易价格74亿美元
  >2011年，发布JDK 7.0
  >2014年，发布JDK 8.0，是继JDK 5.0以来变化最大的版本
  >2017年，发布JDK 9.0，最大限度实现模块化
  >2018年3月，发布JDK 10.0，版本号也称为18.3
  >2018年9月，发布JDK 11.0，版本号也称为18.9


2.Java技术体系平台
  >Java SE(Java Standard Edition)标准版。支持面向桌面级应用（如Windows下的应用程序）的Java平台，提供了完整的Java核心API，此版本以前称为J2SE。
  >Java EE(Java Enterprise Edition)企业版。是为开发企业环境下的应用程序提供的一套解决方案。该技术体系中包含的技术如 :Servlet 、Jsp等，主要针对于Web应用程序开发。版本以前称为J2EE。
  >Java ME(Java Micro Edition)小型版。支持Java程序运行在移动终端（手机、PDA）上的平台，对Java API有所精简，并加入了针对移动终端的支持，此版本以前称为J2ME。
  >Java Card。支持一些Java小程序（Applets）运行在小内存设备（如智能卡）上的平台。


3.Java应用
  •从Java的应用领域来分，Java语言的应用方向主要表现在以下几个方面：
        >企业级应用：主要指复杂的大企业的软件系统、各种类型的网站。Java的安全机制以及它的跨平台的优势，使它在分布式系统领域开发中有广泛应用。应用领域包括金融、电信、交通、电子商务等。
        >Android平台应用：Android应用程序使用Java语言编写。Android开发水平的高低很大程度上取决于Java语言核心能力是否扎实。
        >大数据平台开发：各类框架有Hadoop，spark，storm，flink等，就这类技术生态圈来讲，还有各种中间件如flume，kafka，sqoop等等 ，这些框架以及工具大多数是用Java编写而成，但提供诸如Java，scala，Python，R等各种语言API供编程。
        >移动领域应用：主要表现在消费和嵌入式领域，是指在各种小型设备上的应用，包括手机、PDA、机顶盒、汽车通信设备等。
 
 
 4.Java主要特性
   >Java语言是安全的。Java通常被用在网络环境中，为此，Java提供了一个安全机制以防恶意代码的攻击。如：安全防范机制（类ClassLoader），如分配不同的名字空间以防替代本地的同名类、字节代码检查。
   >Java语言是体系结构中立的。Java程序（后缀为java的文件）在Java平台上被编译为体系结构中立的字节码格式（后缀为class的文件），然后可以在实现这个Java平台的任何系统中运行。
   >Java语言是解释型的。如前所述，Java程序在Java平台上被编译为字节码格式，然后可以在实现这个Java平台的任何系统的解释器中运行。
   >Java是性能略高的。与那些解释型的高级脚本语言相比，Java的性能还是较优的。
   >Java语言是原生支持多线程的。在Java语言中，线程是一种特殊的对象，它必须由Thread类或其子（孙）类来创建。
   >Java语言是安全的。Java通常被用在网络环境中，为此，Java提供了一个安全机制以防恶意代码的攻击。如：安全防范机制（类ClassLoader），如分配不同的名字空间以防替代本地的同名类、字节代码检查。
   >Java语言是体系结构中立的。Java程序（后缀为java的文件）在Java平台上被编译为体系结构中立的字节码格式（后缀为class的文件），然后可以在实现这个Java平台的任何系统中运行。
   >Java语言是解释型的。如前所述，Java程序在Java平台上被编译为字节码格式，然后可以在实现这个Java平台的任何系统的解释器中运行。
   >Java是性能略高的。与那些解释型的高级脚本语言相比，Java的性能还是较优的。
•	Java语言是原生支持多线程的。在Java语言中，线程是一种特殊的对象，它必须由Thread类或其子（孙）类来创建。
