一、数组中涉及的常见算法:
   1.	数组元素的赋值(杨辉三角、回形数等)
   2.	求数值型数组中元素的最大值、最小值、平均数、总和等
   3.	数组的复制、反转、查找(线性查找、二分法查找)
   4.	数组元素的排序算法


二、排序算法
1. 排序：假设含有n个记录的序列为{R1，R2，...,Rn},其相应的关键字序列为{K1，K2，...,Kn}。
   将这些记录重新排序为{Ri1,Ri2,...,Rin},使得相应的关键字值满足条Ki1<=Ki2<=...<=Kin,这样的一种操作称为排序。

2.通常来说，排序的目的是快速查找。

3.衡量排序算法的优劣：
    (1)时间复杂度：分析关键字的比较次数和记录的移动次数
    (2)空间复杂度：分析排序算法中需要多少辅助内存
    (3)稳定性：若两个记录A和B的关键字值相等，但排序后A、B的先后次序保持不变，则称这种排序算法是稳定的。

4.排序算法分类：内部排序和外部排序。
    (1)内部排序：整个排序过程不需要借助于外部存储器（如磁盘等），所有排序操作都在内存中完成。
    (2)外部排序：参与排序的数据非常多，数据量非常大，计算机无法把整个排序过程放在内存中完成，必须借助于外部存储器（如磁盘）。
       外部排序最常见的是多路归并排序。可以认为外部排序是由多次内部排序组成。

5.十大内部排序算法
   (1)选择排序：直接选择排序、堆排序
   (2)交换排序：冒泡排序、快速排序
   (3)插入排序：直接插入排序、折半插入排序、Shell排序
   (4)归并排序
   (5)桶式排序
   (6)基数排序


6、冒泡排序
    (1)介绍：冒泡排序的原理非常简单，它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。
    (2)排序思想：
         >比较相邻的元素。如果第一个比第二个大（升序），就交换他们两个。
         >对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。
         >针对所有的元素重复以上的步骤，除了最后一个。
         >持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较为止。


7.快速排序
    (1)介绍：快速排序通常明显比同为O(nlogn)的其他算法更快，因此常被采用，而且快排采用了分治法的思想，所以在很多笔试面试中能经常看到快排的影子。可见掌握快排的重要性。
             快速排序（Quick Sort）由图灵奖获得者Tony Hoare发明，被列为20世纪十大算法之一，是迄今为止所有内排序算法中速度最快的一种。
             冒泡排序的升级版，交换排序的一种。快速排序的时间复杂度为O(nlog(n))。
    (2)排序思想：
         >从数列中挑出一个元素，称为"基准"（pivot），
         >重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。
          在这个分区结束之后，该基准就处于数列的中间位置。这个称为分区（partition）操作。
         >递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。
         >递归的最底部情形，是数列的大小是零或一，也就是永远都已经被排序好了。
          虽然一直递归下去，但是这个算法总会结束，因为在每次的迭代（iteration）中，它至少会把一个元素摆到它最后的位置去。


8.各种内部排序方法性能比较
   (1)从平均时间而言：快速排序最佳。但在最坏情况下时间性能不如堆排序和归并排序。
   (2)从算法简单性看：由于直接选择排序、直接插入排序和冒泡排序的算法比较简单，将其认为是简单算法。对于Shell排序、堆排序、快速排序和归并排序算法，其算法比较复杂，认为是复杂排序。
   (3)从稳定性看：直接插入排序、冒泡排序和归并排序时稳定的；而直接选择排序、快速排序、 Shell排序和堆排序是不稳定排序
   (4)从待排序的记录数n的大小看，n较小时，宜采用简单排序；而n较大时宜采用改进排序。


9.排序算法的选择
   (1)若n较小(如n≤50)，可采用直接插入或直接选择排序。当记录规模较小时，直接插入排序较好；否则因为直接选择移动的记录数少于直接插入，应选直接选择排序为宜。
   (2)若文件初始状态基本有序(指正序)，则应选用直接插入、冒泡或随机的快速排序为宜；
   (3)若n较大，则应采用时间复杂度为O(nlgn)的排序方法：快速排序、堆排序或归并排序。
