1.变量的概念
     >内存中的一个存储区域
     >该区域的数据可以在同一类型范围内不断变化
     >变量是程序中最基本的存储单元。包含变量类型、变量名和存储的值
 
2.变量的作用：用于在内存中保存数据。
 
3.使用变量注意：
      >Java中每个变量必须先声明，后使用
      >使用变量名来访问这块区域的数据
      >变量的作用域：其定义所在的一对{ }内
      >变量只有在其作用域内才有效
      >同一个作用域内，不能定义重名的变量

4.java定义变量的格式：数据类型 变量名 = 变量值;

5.Java定义的数据类型
一、变量按照数据类型来分：

	基本数据类型：
		整型：byte \ short \ int \ long
		浮点型：float \ double
		字符型：char
		布尔型：boolean


	引用数据类型：
		类(class)
		接口(interface)
		数组(array)


二、变量在类中声明的位置：
		成员变量  vs  局部变量

class VariableTest1 {
	public static void main(String[] args) {
		//1. 整型：byte(1字节=8bit) \ short(2字节) \ int(4字节) \ long(8字节)
		//① byte范围：-128 ~ 127
		//
		byte b1 = 12;
		byte b2 = -128;
		//b2 = 128;//编译不通过
		System.out.println(b1);
		System.out.println(b2);
		// ② 声明long型变量，必须以"l"或"L"结尾
		// ③ 通常，定义整型变量时，使用int型。
		short s1 = 128;
		int i1 = 1234;
		long l1 = 3414234324L;
		System.out.println(l1);

		//2. 浮点型：float(4字节) \ double(8字节)
		//① 浮点型，表示带小数点的数值
		//② float表示数值的范围比long还大

		double d1 = 123.3;
		System.out.println(d1 + 1);
		//③ 定义float类型变量时，变量要以"f"或"F"结尾
		float f1 = 12.3F;
		System.out.println(f1);
		//④ 通常，定义浮点型变量时，使用double型。

		//3. 字符型：char (1字符=2字节)
		//① 定义char型变量，通常使用一对'',内部只能写一个字符
		char c1 = 'a';
		//编译不通过
		//c1 = 'AB';
		System.out.println(c1);

		char c2 = '1';
		char c3 = '中';
		char c4 = 'ス';
		System.out.println(c2);
		System.out.println(c3);
		System.out.println(c4);

		//② 表示方式：1.声明一个字符 2.转义字符 3.直接使用 Unicode 值来表示字符型常量
		char c5 = '\n';//换行符
		c5 = '\t';//制表符
		System.out.print("hello" + c5);
		System.out.println("world");

		char c6 = '\u0043';
		System.out.println(c6);

		//4.布尔型：boolean
		//① 只能取两个值之一：true 、 false
		//② 常常在条件判断、循环结构中使用
		boolean bb1 = true;
		System.out.println(bb1);

		boolean isMarried = true;
		if(isMarried){
			System.out.println("你就不能参加\"单身\"party了！\\n很遗憾");
		}else{
			System.out.println("你可以多谈谈女朋友！");
		}

	}
}


6.基本数据类型之间的运算规则：

前提：这里讨论只是7种基本数据类型变量间的运算。不包含boolean类型的。

1. 自动类型提升：
    结论：当容量小的数据类型的变量与容量大的数据类型的变量做运算时，结果自动提升为容量大的数据类型。
	byte 、char 、short --> int --> long --> float --> double 

	特别的：当byte、char、short三种类型的变量做运算时，结果为int型
	
2. 强制类型转换：自动类型提升运算的逆运算
      >(1)需要使用强转符：()
      >(2)注意点：强制类型转换，可能导致精度损失。

说明：此时的容量大小指的是，表示数的范围的大和小。比如：float容量要大于long的容量


7.String类型变量的使用
     >(1)String属于引用数据类型,翻译为：字符串
     >(2)明String类型变量时，使用一对""
     >(3)String可以和8种基本数据类型变量做运算，且运算只能是连接运算：+
     >(4)运算的结果仍然是String类型


8.进制

(1)所有数字在计算机底层都以二进制形式存在。

(2)对于整数，有四种表示方式：
    > 二进制(binary)：0,1 ，满2进1.以0b或0B开头。
    > 十进制(decimal)：0-9 ，满10进1。
    > 八进制(octal)：0-7 ，满8进1. 以数字0开头表示。
    > 十六进制(hex)：0-9及A-F，满16进1. 以0x或0X开头表示。此处的A-F不区分大小写。
         如：0x21AF +1= 0X21B0

(3)二进制
       >Java整数常量默认是int类型，当用二进制定义整数时，其第32位是符号位；当是long类型时，二进制默认占64位，第64位是符号位
       >二进制的整数有如下三种形式：
            >原码：直接将一个数值换成二进制数。最高位是符号位
            >负数的反码：是对原码按位取反，只是最高位（符号位）确定为1。
            >负数的补码：其反码加1。
       >计算机以二进制补码的形式保存所有的整数。
            >正数的原码、反码、补码都相同
            >负数的补码是其反码+1
